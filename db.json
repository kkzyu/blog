{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"source/headpic.jpg","path":"headpic.jpg","modified":1,"renderable":0},{"_id":"source/musicshare.jpg","path":"musicshare.jpg","modified":1,"renderable":0},{"_id":"node_modules/hexo-theme-vivia/source/avatar.jpg","path":"avatar.jpg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/favicon.ico","path":"favicon.ico","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/js/jquery-3.4.1.min.js","path":"js/jquery-3.4.1.min.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/js/light-dark-switch.js","path":"js/light-dark-switch.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/js/color.global.min.js","path":"js/color.global.min.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/js/load-settings.js","path":"js/load-settings.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-dark-128.png","path":"images/favicon-dark-128.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-light-128.png","path":"images/favicon-light-128.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-dark-32.png","path":"images/favicon-dark-32.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-dark-180.png","path":"images/favicon-dark-180.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-dark-192.png","path":"images/favicon-dark-192.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-light-180.png","path":"images/favicon-light-180.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-light-32.png","path":"images/favicon-light-32.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/images/tile.png","path":"images/tile.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-light-192.png","path":"images/favicon-light-192.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/Roboto-Regular.ttf","path":"css/fonts/Roboto-Regular.ttf","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/Roboto-Medium.ttf","path":"css/fonts/Roboto-Medium.ttf","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/Roboto-Bold.ttf","path":"css/fonts/Roboto-Bold.ttf","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.woff2","path":"css/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/仓库迁移.md","hash":"5d09d0bfe9d47f7138e3c6f971452d38cc0a68ef","modified":1745898216225},{"_id":"source/_posts/hello-world.md","hash":"00900e7403b3f0d827234caf9b386db4a9b374c7","modified":1745853626639},{"_id":"source/about/index.md","hash":"dce07a6963a5e01efe395f8d7289c2fa35e29fb0","modified":1745902292055},{"_id":"source/_posts/pinia重构.md","hash":"0ba038ccf639fcb20470e15e2042a021a519e3c4","modified":1745902336146},{"_id":"node_modules/hexo-theme-vivia/LICENSE","hash":"1039079fb6969c255e3df9a411ff5f94702f53ad","modified":1745810939645},{"_id":"node_modules/hexo-theme-vivia/README.md","hash":"f3bb9857bd474e06d9fa42cc1911c6ee8d86649f","modified":1745810939753},{"_id":"node_modules/hexo-theme-vivia/.gitattributes","hash":"ba3dfe345280bdcc5e817bb02cf49b8b8d8e1c4c","modified":1745810939637},{"_id":"node_modules/hexo-theme-vivia/example_config.vivia.yml","hash":"38ba626569be2770032aae32a06a20650acab183","modified":1745828421139},{"_id":"node_modules/hexo-theme-vivia/README.zh-CN.md","hash":"8b614f3b300fd0b4a4b7858b0897cd55ae00ef48","modified":1745810939754},{"_id":"node_modules/hexo-theme-vivia/example_zh_CN_config.vivia.yml","hash":"c6ece131927e0536afe978b753b2de2833b6a594","modified":1745828478570},{"_id":"node_modules/hexo-theme-vivia/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1745810939861},{"_id":"node_modules/hexo-theme-vivia/package.json","hash":"dda08139954a6e50e056bdb197b55fd1eb6925ae","modified":1745810939751},{"_id":"node_modules/hexo-theme-vivia/languages/en-GB.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1745810939862},{"_id":"node_modules/hexo-theme-vivia/languages/en-US.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1745810939863},{"_id":"node_modules/hexo-theme-vivia/languages/en.yml","hash":"b4b55e56a0554bfdc383650742c2038cef777142","modified":1745810939864},{"_id":"node_modules/hexo-theme-vivia/languages/zh-CN.yml","hash":"89154c7877fa274d340e2adb2241167abda71c60","modified":1745810939868},{"_id":"node_modules/hexo-theme-vivia/languages/zh-TW.yml","hash":"9098818e791e19d9921e256c771664b2cd999e13","modified":1745810939869},{"_id":"node_modules/hexo-theme-vivia/languages/zh.yml","hash":"e56bebd19d2abd1698e9aa87d337941957977468","modified":1745810939870},{"_id":"node_modules/hexo-theme-vivia/layout/layout.ejs","hash":"11c0de0294fa83f38d70fcb3d5c47f77ed1e98da","modified":1745810939705},{"_id":"node_modules/hexo-theme-vivia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1745810939685},{"_id":"node_modules/hexo-theme-vivia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1745810939666},{"_id":"node_modules/hexo-theme-vivia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1745810939716},{"_id":"node_modules/hexo-theme-vivia/layout/index.ejs","hash":"c9d8dca730a254ab3f48309677a3cb994e513ad6","modified":1745810939703},{"_id":"node_modules/hexo-theme-vivia/scripts/categories-process.js","hash":"41b6be3986763efb8a8b363cbabba177c502a193","modified":1745810939738},{"_id":"node_modules/hexo-theme-vivia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1745810939727},{"_id":"node_modules/hexo-theme-vivia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1745810939717},{"_id":"node_modules/hexo-theme-vivia/scripts/color-generate.js","hash":"90dff57087b692d2aa687c49980a0eed56a2f058","modified":1745810939740},{"_id":"node_modules/hexo-theme-vivia/scripts/archive-helper.js","hash":"a04e4c8c0925652635e50605182dc5f1509b910f","modified":1745810939737},{"_id":"node_modules/hexo-theme-vivia/source/favicon.ico","hash":"6c4f53ed166e0a330d4931d77a58b09b8bdaf832","modified":1745828120424},{"_id":"node_modules/hexo-theme-vivia/layout/_icon/menu.ejs","hash":"47f04d2c6413beaffee57d6164b5637bdb2cd1cb","modified":1745810939707},{"_id":"node_modules/hexo-theme-vivia/source/avatar.jpg","hash":"1266791ae8dc4dd620d03d2c6a56d078a1244df7","modified":1745808309475},{"_id":"node_modules/hexo-theme-vivia/layout/_icon/navigate_before.ejs","hash":"1c11e29aa2719674b161c072e53576ac38b1ee65","modified":1745810939714},{"_id":"node_modules/hexo-theme-vivia/layout/_icon/dark_mode.ejs","hash":"0ea0e23fb16103f424591cf46939fcf07738ccc1","modified":1745810939689},{"_id":"node_modules/hexo-theme-vivia/layout/_icon/rss_feed.ejs","hash":"8bac3aa45c0e7a55f38783e7350039d0b1adb48b","modified":1745810939721},{"_id":"node_modules/hexo-theme-vivia/layout/_icon/wb_sunny.ejs","hash":"ef254cc64ba10918218a6672e34fd5f6d4ce08bb","modified":1745810939729},{"_id":"node_modules/hexo-theme-vivia/layout/_icon/navigate_next.ejs","hash":"c3ecb137ebc9bb949aebe3fc0631b05ba578c8e1","modified":1745810939715},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1745810939651},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/archive.ejs","hash":"2106e7f5f73c9c8d592dcd7dab4359d23037f382","modified":1745810939654},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/back-to-top.ejs","hash":"a5132c5ab08b55891bcfe10d36ec83cacbfd60af","modified":1745810939672},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/article.ejs","hash":"b63c43eb5902d2c2d64be1e700c639eb81b8a4e4","modified":1745810939669},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/footer.ejs","hash":"e78a36c94879f70df2ec615ccc2b5d459eeb4fe7","modified":1745810939694},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/baidu-analytics.ejs","hash":"5951d0adc0490ff4d5c956e54d4828119755d1e7","modified":1745810939675},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/head.ejs","hash":"b52fd8595ec4849944564721810e74948895675f","modified":1745810939702},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/gauges-analytics.ejs","hash":"21a1e2a3907d1a3dad1cd0ab855fe6735f233c74","modified":1745810939697},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1745810939708},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/google-analytics.ejs","hash":"2ea7442ea1e1a8ab4e41e26c563f58413b59a3d0","modified":1745810939699},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/banner.ejs","hash":"7f9c0b7d10238b45c1c1a65df7f801c904ae898c","modified":1745810939678},{"_id":"node_modules/hexo-theme-vivia/layout/_widget/color.ejs","hash":"9e00f6c621db3c5c659b03d1dad6caa90d6217d9","modified":1745810939687},{"_id":"node_modules/hexo-theme-vivia/layout/_widget/archive.ejs","hash":"1dd3efd775f09f3e5a0e0205ddb8388851dfad57","modified":1745810939661},{"_id":"node_modules/hexo-theme-vivia/layout/_widget/category.ejs","hash":"cc465be58bf6aeee7947e9cf9563c651e42e7a5d","modified":1745810939684},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/sidebar.ejs","hash":"97eee27bfb59ccc109fcd9ce87963f686c2b6ba9","modified":1745810939723},{"_id":"node_modules/hexo-theme-vivia/layout/_widget/recent_posts.ejs","hash":"647f4151e7fca48af2b727228b84deb0652a6376","modified":1745810939720},{"_id":"node_modules/hexo-theme-vivia/layout/_widget/profile.ejs","hash":"ccd8c2442f3437b6752946f4d573edefaf2cd4c0","modified":1745810939719},{"_id":"node_modules/hexo-theme-vivia/layout/_widget/tag.ejs","hash":"f231a62130014c07dc1888ed30399bcfde3ed0c0","modified":1745810939725},{"_id":"node_modules/hexo-theme-vivia/source/js/load-settings.js","hash":"f420677aad3d200b4f92fca60ab5cb47c7db9a21","modified":1745810939749},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/navbar.ejs","hash":"7d4a434cba72a3bca58b59fab4ce15894da68049","modified":1745810939712},{"_id":"node_modules/hexo-theme-vivia/source/js/light-dark-switch.js","hash":"371eacee9af459d04de60190c549fe7f8374be36","modified":1745810939748},{"_id":"node_modules/hexo-theme-vivia/source/js/color.global.min.js","hash":"8140005be5afebb828b2890ce6e686ece34e78df","modified":1745810939744},{"_id":"node_modules/hexo-theme-vivia/source/css/_variables.styl","hash":"b6b8419839cfbed3a0bde16ed1e6ad44bc59b7fe","modified":1745810939775},{"_id":"node_modules/hexo-theme-vivia/source/js/script.js","hash":"998ed4c5b147e1299bf62beebf33514474f28112","modified":1745810939750},{"_id":"node_modules/hexo-theme-vivia/source/css/style.styl","hash":"32cceae9c16fb4de06fd64bc333f07a1ba4d7528","modified":1745810939814},{"_id":"node_modules/hexo-theme-vivia/source/css/_extend.styl","hash":"cc37f2c5f8ccdb77f87cf8ed35ea71a2d66c9605","modified":1745810939773},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-light-128.png","hash":"9c93c4ac222da14ca4f43b2d54573ce4099a161b","modified":1745810939765},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-dark-192.png","hash":"929acfdd6e69ceacdecf40a03ed520f826750c06","modified":1745810939763},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-dark-128.png","hash":"44cceeef5fddc81a613faf6caa53bac139a6b564","modified":1745810939760},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-dark-32.png","hash":"8ef87b664e5c6250e5badd7312fe192e30fe2e83","modified":1745810939764},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-light-180.png","hash":"6b26caab1d036726beaf47510bada4cddf253b24","modified":1745810939767},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-dark-180.png","hash":"4771a6bd0386924ad31719f8999c036b36ad5688","modified":1745810939761},{"_id":"node_modules/hexo-theme-vivia/source/images/tile.png","hash":"fbc016bfb004a5ca4a8c6f0b078ae320ec98ba20","modified":1745810939771},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-light-192.png","hash":"0d5f76f309b6a0661d695d6bf4db8ef8a56e4ae5","modified":1745810939768},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-light-32.png","hash":"604915a91ddede7874d5dcfa4de0bc4b04ae5da6","modified":1745810939769},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/post/category.ejs","hash":"9f06ff87e50ff5005080c6bdebf4a0bbaf550aba","modified":1745810939682},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/post/gallery.ejs","hash":"0282d116251bd60b91e05c786386e4d570035996","modified":1745810939695},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/post/date.ejs","hash":"760970e719ef973c18ac36c9fc9e13d0edaaaa5a","modified":1745810939692},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/post/title.ejs","hash":"14e34508135bf83763d8c1f1f8d8467dff689002","modified":1745810939728},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/post/nav.ejs","hash":"86886e1ca10aec7087b44048f92719d24ac738f4","modified":1745810939710},{"_id":"node_modules/hexo-theme-vivia/source/css/_util/color.styl","hash":"f98e30552996949e07529f13342f26ebd45a2281","modified":1745810939787},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1745810939724},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/archive.styl","hash":"ee7b27115aed0182dc9ac51b637a2bf986b56f55","modified":1745810939780},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/article.styl","hash":"cb77215312d030593afc5067810198cd2e2a710c","modified":1745810939781},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/back-to-top.styl","hash":"e8056291a477fe2d5216fdc76a84dc0f48975fef","modified":1745810939782},{"_id":"node_modules/hexo-theme-vivia/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1745810939806},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/comment.styl","hash":"35cca399adc17633885ca416e8c48acd468d0e31","modified":1745810939790},{"_id":"node_modules/hexo-theme-vivia/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1745810939798},{"_id":"node_modules/hexo-theme-vivia/source/css/_util/config.styl","hash":"8d603fa8f7957cd6a06f01616ea54977bdf62db2","modified":1745810939793},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/footer.styl","hash":"f038558bfe427b2cedd029cb9638c1d70d936763","modified":1745810939797},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/header.styl","hash":"c7a95fbec06dba431c45e558dbaa767f0dacd1a3","modified":1745810939800},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/highlight.styl","hash":"3abb118aae2dba149cb616bbcbfed129ccfcb5b7","modified":1745810939803},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/settings.styl","hash":"6e67f8c3659f6a9dd49e513a595a01c1afebf87c","modified":1745810939808},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1745810939811},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/main-title.styl","hash":"73df1241b15d62cc19665883cd789440d4c7e7a6","modified":1745810939805},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/sidebar-aside.styl","hash":"87da0ef32f6e4e6cf742450f91731c68a68796ae","modified":1745810939810},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/sidebar.styl","hash":"69a08fe059c5e2ee00760ae61f1123d61d90c39a","modified":1745810939812},{"_id":"node_modules/hexo-theme-vivia/source/js/jquery-3.4.1.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1745810939747},{"_id":"source/headpic.jpg","hash":"9e2c72c5bd71b934ae134b621981a918281352f1","modified":1745900645832},{"_id":"source/musicshare.jpg","hash":"adeef7aadc8aafb7d23aa36cd59d469b31d8f45c","modified":1745901070557},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1745810939856},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1745810939860},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1745810939757},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/Roboto-Medium.ttf","hash":"3c6a09fcc6a454924c81af7dff94fc6d399ed79b","modified":1745810939846},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/Roboto-Regular.ttf","hash":"56c5c0d38bde4c1f1549dda43db37b09c608aad3","modified":1745810939852},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/Roboto-Bold.ttf","hash":"62442a18a9fe9457c1afeabf683d263a691b7798","modified":1745810939838},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1745810939832},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1745810939735},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1745810939826},{"_id":"public/about/index.html","hash":"9bed9aafd626088bb6b94e17d9e89b83485d65be","modified":1745902389153},{"_id":"public/2025/04/29/仓库迁移/index.html","hash":"d4bbee7aa8cc54f2a644ef3a10cbd0b9d16c98ea","modified":1745902389153},{"_id":"public/2025/04/12/hello-world/index.html","hash":"c7d8582be9a8a1fdb904c963af80f91dae2bb651","modified":1745902389153},{"_id":"public/archives/index.html","hash":"5e2bcb32ef4ea8aedd6bd7724f4045ee417127c2","modified":1745902389153},{"_id":"public/2025/04/28/pinia重构/index.html","hash":"8d29ddf2d69b8cb86ee9ba80f6f8a6379be0b618","modified":1745902389153},{"_id":"public/archives/2025/index.html","hash":"2fbb7d2ed6b4e1f0aa23d487a7eb5141d9f2d80b","modified":1745902389153},{"_id":"public/archives/2025/04/index.html","hash":"218eeed7854003fb74a331ebb5d10aec7cb43e88","modified":1745902389153},{"_id":"public/tags/git/index.html","hash":"123bf5591fee312d46538091e56dce172a5fb42c","modified":1745902389153},{"_id":"public/tags/web前端/index.html","hash":"a50b92eca80c9d2530e17a3c7dade232b69e5493","modified":1745902389153},{"_id":"public/index.html","hash":"da7e4ceaeff4cbaf54e5441e832a813f10bcfc42","modified":1745902389153},{"_id":"public/avatar.jpg","hash":"1266791ae8dc4dd620d03d2c6a56d078a1244df7","modified":1745902389153},{"_id":"public/favicon.ico","hash":"6c4f53ed166e0a330d4931d77a58b09b8bdaf832","modified":1745902389153},{"_id":"public/images/favicon-dark-128.png","hash":"44cceeef5fddc81a613faf6caa53bac139a6b564","modified":1745902389153},{"_id":"public/images/favicon-dark-32.png","hash":"8ef87b664e5c6250e5badd7312fe192e30fe2e83","modified":1745902389153},{"_id":"public/images/favicon-dark-180.png","hash":"4771a6bd0386924ad31719f8999c036b36ad5688","modified":1745902389153},{"_id":"public/images/favicon-light-128.png","hash":"9c93c4ac222da14ca4f43b2d54573ce4099a161b","modified":1745902389153},{"_id":"public/images/favicon-light-180.png","hash":"6b26caab1d036726beaf47510bada4cddf253b24","modified":1745902389153},{"_id":"public/images/favicon-light-32.png","hash":"604915a91ddede7874d5dcfa4de0bc4b04ae5da6","modified":1745902389153},{"_id":"public/images/tile.png","hash":"fbc016bfb004a5ca4a8c6f0b078ae320ec98ba20","modified":1745902389153},{"_id":"public/images/favicon-light-192.png","hash":"0d5f76f309b6a0661d695d6bf4db8ef8a56e4ae5","modified":1745902389153},{"_id":"public/images/favicon-dark-192.png","hash":"929acfdd6e69ceacdecf40a03ed520f826750c06","modified":1745902389153},{"_id":"public/js/light-dark-switch.js","hash":"371eacee9af459d04de60190c549fe7f8374be36","modified":1745902389153},{"_id":"public/css/style.css","hash":"731b58e1ae2e40d7aeadb62318fbf13af15619fb","modified":1745902389153},{"_id":"public/js/script.js","hash":"998ed4c5b147e1299bf62beebf33514474f28112","modified":1745902389153},{"_id":"public/js/jquery-3.4.1.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1745902389153},{"_id":"public/js/load-settings.js","hash":"f420677aad3d200b4f92fca60ab5cb47c7db9a21","modified":1745902389153},{"_id":"public/js/color.global.min.js","hash":"8140005be5afebb828b2890ce6e686ece34e78df","modified":1745902389153},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1745902389153},{"_id":"public/css/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1745902389153},{"_id":"public/css/fonts/Roboto-Medium.ttf","hash":"3c6a09fcc6a454924c81af7dff94fc6d399ed79b","modified":1745902389153},{"_id":"public/css/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1745902389153},{"_id":"public/css/fonts/Roboto-Bold.ttf","hash":"62442a18a9fe9457c1afeabf683d263a691b7798","modified":1745902389153},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1745902389153},{"_id":"public/css/fonts/Roboto-Regular.ttf","hash":"56c5c0d38bde4c1f1549dda43db37b09c608aad3","modified":1745902389153},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1745902389153},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1745902389153},{"_id":"public/headpic.jpg","hash":"9e2c72c5bd71b934ae134b621981a918281352f1","modified":1745902389153},{"_id":"public/musicshare.jpg","hash":"adeef7aadc8aafb7d23aa36cd59d469b31d8f45c","modified":1745902389153}],"Category":[],"Data":[],"Page":[{"title":"about","date":"2025-04-28T03:31:59.000Z","_content":"### 最近在听：\n![歌单分享](musicshare.jpg)\n\n\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2025-04-28 11:31:59\n---\n### 最近在听：\n![歌单分享](musicshare.jpg)\n\n\n","updated":"2025-04-29T04:51:32.055Z","path":"about/index.html","comments":1,"layout":"page","_id":"cma217e4j0001gorgd3onb419","content":"<h3 id=\"最近在听：\"><a href=\"#最近在听：\" class=\"headerlink\" title=\"最近在听：\"></a>最近在听：</h3><p><img src=\"/blog/musicshare.jpg\" alt=\"歌单分享\"></p>\n","length":5,"excerpt":"","more":"<h3 id=\"最近在听：\"><a href=\"#最近在听：\" class=\"headerlink\" title=\"最近在听：\"></a>最近在听：</h3><p><img src=\"/blog/musicshare.jpg\" alt=\"歌单分享\"></p>\n"}],"Post":[{"title":"hexo blog部署记录","date":"2025-04-12T08:00:00.000Z","_content":"2025年4月28日，第一次尝试把hexo集成到个人主页中，记录一下部署过程，以及后期的更新和测试步骤。\n\n## 部署过程\n\n### 创建hexo项目\n\nhexo是github上一个开源的博客模板，首先可以在新目录下创建一个hexo项目，然后进入该目录，执行如下命令：\n\n``` bash\n$ npm install -g hexo-cli\n```\n\n接着进行一个初始化，进行初始化之后会创建一个新的hexo项目，自动克隆hexo-start和landscape主题：\n\n``` bash\n$ hexo init myblog\n$ cd myblog\n$ npm install\n```\n初始化之后，项目文件夹如下所示：\n.\n├── _config.yml（网站配置文件，以下的修改调整主要在这个文件下进行）\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n\n\n### 本地测试\n默认地址是http://localhost:4000/\n``` bash\n$ hexo server\n```\n\n### 选择主题\n   \nhexo默认的主题比较简约，但它提供了非常多的模板，在https://hexo.io/themes/上可以挑选主题，我这里用的是vivia（https://github.com/saicaca/hexo-theme-vivia）。接着按README步骤安装执行即可。\n\n### 部署到github pages上\n#### 1.部署个人网站\n\n首先需要确认github上已有<username>.github.io的仓库，用于存放个人主页的代码。这里对创建过程进行一个简单的介绍：\n把个人主页网站的所有代码copy到一个本地的新文件夹下，然后再在github上新建一个仓库（命名为<username>.github.io,比如我的username是kkzyu），接着在本地文件夹中执行如下命令：\n\n``` bash\n$ git remote add origin git@github.com:kkzyu/kkzyu.github.io.git\n$ git branch -M main\n$ git push -u origin main\n```\n\npush成功后，进入setting->pages->branch，选择main和root，点击save。等待十分钟之后即可在https://kkzyu.github.io/查看自己的个人主页。\n\n#### 2.部署博客\n\n首先需要编辑myblog/_config.yml文件，修改/增加如下代码：\n    \n``` yaml\n# 部署配置\ndeploy:\n  type: git\n  repo: https://github.com/kkzyu/blog.git \n  branch: gh-pages  # 必须使用 gh-pages 分支\n  message: \"更新博客：{{ now('YYYY-MM-DD HH:mm:ss') }}\"\n\n# URL 设置\nurl: https://kkzyu.github.io/blog\nroot: /blog/\n```\n\n由于hexo博客和个人主页独立部署更优（少冲突），因此在github上新建一个仓库（可以命名为myblog），注意无需初始化readme或其他文件。创建完成后，同样需要将本地的仓库推送上去：\n\n``` bash\n$ git remote add origin git@github.com:kkzyu/myblog.git\n$ git branch -M main\n$ git push -u origin main\n```  \n\n接着在本地myblog文件夹下安装部署插件并部署：\n\n``` bash\n$ npm install hexo-deployer-git --save\n$ hexo clean && hexo generate && hexo deploy\n```\n\n接着进入myblog仓库的settings->pages，选择branch为gh-pages，选择root目录。之后等待几分钟，进入到https://kkzyu.github.io/blog/，即可看到自己的博客。\n\n### 将博客集成到vue个人主页中\n\n在vue项目中，修改路由配置(router/index.js)：\n\n``` js\nconst routes = [{\n    path: '/blog',\n    name: 'Blog',\n    beforeEnter() {\n      window.open('https://kkzyu.github.io/blog/', '_blank')\n      // 或者不新开标签页：\n      // window.location.href = 'https://kkzyu.github.io/blog/'\n    }\n  }]\n```\n\n在APP.vue中添加博客链接：\n\n``` vue\n<router-link to=\"/blog\">Blog</router-link>\n```\n\n等待几分钟之后，即可在vue项目中看到博客链接，点击后会在新标签页打开博客。\n\n## 后期更新和测试\n### 更新博客\n\n在本地对myblog进行了修改后，网页并不会自动更新，需要进行一下操作才可在网页中观察到更新后内容：\n\n``` bash\nhexo clean \nhexo generate\nhexo deploy\n#可选：将源码变更推送到main分支备份\ngit add .\ngit commit -m \"更新博客内容\"\ngit push origin main\n```\n\n如果想要现在本地进行测试可以执行：\n\n``` bash\n$ hexo server\n```\n\n待测试成功后，再进行更新。","source":"_posts/hello-world.md","raw":"---\ntitle: hexo blog部署记录\ndate: 2025-04-12 16:00:00\ntags: web前端\n---\n2025年4月28日，第一次尝试把hexo集成到个人主页中，记录一下部署过程，以及后期的更新和测试步骤。\n\n## 部署过程\n\n### 创建hexo项目\n\nhexo是github上一个开源的博客模板，首先可以在新目录下创建一个hexo项目，然后进入该目录，执行如下命令：\n\n``` bash\n$ npm install -g hexo-cli\n```\n\n接着进行一个初始化，进行初始化之后会创建一个新的hexo项目，自动克隆hexo-start和landscape主题：\n\n``` bash\n$ hexo init myblog\n$ cd myblog\n$ npm install\n```\n初始化之后，项目文件夹如下所示：\n.\n├── _config.yml（网站配置文件，以下的修改调整主要在这个文件下进行）\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n\n\n### 本地测试\n默认地址是http://localhost:4000/\n``` bash\n$ hexo server\n```\n\n### 选择主题\n   \nhexo默认的主题比较简约，但它提供了非常多的模板，在https://hexo.io/themes/上可以挑选主题，我这里用的是vivia（https://github.com/saicaca/hexo-theme-vivia）。接着按README步骤安装执行即可。\n\n### 部署到github pages上\n#### 1.部署个人网站\n\n首先需要确认github上已有<username>.github.io的仓库，用于存放个人主页的代码。这里对创建过程进行一个简单的介绍：\n把个人主页网站的所有代码copy到一个本地的新文件夹下，然后再在github上新建一个仓库（命名为<username>.github.io,比如我的username是kkzyu），接着在本地文件夹中执行如下命令：\n\n``` bash\n$ git remote add origin git@github.com:kkzyu/kkzyu.github.io.git\n$ git branch -M main\n$ git push -u origin main\n```\n\npush成功后，进入setting->pages->branch，选择main和root，点击save。等待十分钟之后即可在https://kkzyu.github.io/查看自己的个人主页。\n\n#### 2.部署博客\n\n首先需要编辑myblog/_config.yml文件，修改/增加如下代码：\n    \n``` yaml\n# 部署配置\ndeploy:\n  type: git\n  repo: https://github.com/kkzyu/blog.git \n  branch: gh-pages  # 必须使用 gh-pages 分支\n  message: \"更新博客：{{ now('YYYY-MM-DD HH:mm:ss') }}\"\n\n# URL 设置\nurl: https://kkzyu.github.io/blog\nroot: /blog/\n```\n\n由于hexo博客和个人主页独立部署更优（少冲突），因此在github上新建一个仓库（可以命名为myblog），注意无需初始化readme或其他文件。创建完成后，同样需要将本地的仓库推送上去：\n\n``` bash\n$ git remote add origin git@github.com:kkzyu/myblog.git\n$ git branch -M main\n$ git push -u origin main\n```  \n\n接着在本地myblog文件夹下安装部署插件并部署：\n\n``` bash\n$ npm install hexo-deployer-git --save\n$ hexo clean && hexo generate && hexo deploy\n```\n\n接着进入myblog仓库的settings->pages，选择branch为gh-pages，选择root目录。之后等待几分钟，进入到https://kkzyu.github.io/blog/，即可看到自己的博客。\n\n### 将博客集成到vue个人主页中\n\n在vue项目中，修改路由配置(router/index.js)：\n\n``` js\nconst routes = [{\n    path: '/blog',\n    name: 'Blog',\n    beforeEnter() {\n      window.open('https://kkzyu.github.io/blog/', '_blank')\n      // 或者不新开标签页：\n      // window.location.href = 'https://kkzyu.github.io/blog/'\n    }\n  }]\n```\n\n在APP.vue中添加博客链接：\n\n``` vue\n<router-link to=\"/blog\">Blog</router-link>\n```\n\n等待几分钟之后，即可在vue项目中看到博客链接，点击后会在新标签页打开博客。\n\n## 后期更新和测试\n### 更新博客\n\n在本地对myblog进行了修改后，网页并不会自动更新，需要进行一下操作才可在网页中观察到更新后内容：\n\n``` bash\nhexo clean \nhexo generate\nhexo deploy\n#可选：将源码变更推送到main分支备份\ngit add .\ngit commit -m \"更新博客内容\"\ngit push origin main\n```\n\n如果想要现在本地进行测试可以执行：\n\n``` bash\n$ hexo server\n```\n\n待测试成功后，再进行更新。","slug":"hello-world","published":1,"updated":"2025-04-28T15:20:26.639Z","comments":1,"layout":"post","photos":[],"_id":"cma217e4e0000gorg26f71azs","content":"<p>2025年4月28日，第一次尝试把hexo集成到个人主页中，记录一下部署过程，以及后期的更新和测试步骤。</p>\n<h2 id=\"部署过程\"><a href=\"#部署过程\" class=\"headerlink\" title=\"部署过程\"></a>部署过程</h2><h3 id=\"创建hexo项目\"><a href=\"#创建hexo项目\" class=\"headerlink\" title=\"创建hexo项目\"></a>创建hexo项目</h3><p>hexo是github上一个开源的博客模板，首先可以在新目录下创建一个hexo项目，然后进入该目录，执行如下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n\n<p>接着进行一个初始化，进行初始化之后会创建一个新的hexo项目，自动克隆hexo-start和landscape主题：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo init myblog</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> myblog</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n<p>初始化之后，项目文件夹如下所示：<br>.<br>├── _config.yml（网站配置文件，以下的修改调整主要在这个文件下进行）<br>├── package.json<br>├── scaffolds<br>├── source<br>|   ├── _drafts<br>|   └── _posts<br>└── themes</p>\n<h3 id=\"本地测试\"><a href=\"#本地测试\" class=\"headerlink\" title=\"本地测试\"></a>本地测试</h3><p>默认地址是<a href=\"http://localhost:4000/\">http://localhost:4000/</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"选择主题\"><a href=\"#选择主题\" class=\"headerlink\" title=\"选择主题\"></a>选择主题</h3><p>hexo默认的主题比较简约，但它提供了非常多的模板，在<a href=\"https://hexo.io/themes/%E4%B8%8A%E5%8F%AF%E4%BB%A5%E6%8C%91%E9%80%89%E4%B8%BB%E9%A2%98%EF%BC%8C%E6%88%91%E8%BF%99%E9%87%8C%E7%94%A8%E7%9A%84%E6%98%AFvivia%EF%BC%88https://github.com/saicaca/hexo-theme-vivia%EF%BC%89%E3%80%82%E6%8E%A5%E7%9D%80%E6%8C%89README%E6%AD%A5%E9%AA%A4%E5%AE%89%E8%A3%85%E6%89%A7%E8%A1%8C%E5%8D%B3%E5%8F%AF%E3%80%82\">https://hexo.io/themes/上可以挑选主题，我这里用的是vivia（https://github.com/saicaca/hexo-theme-vivia）。接着按README步骤安装执行即可。</a></p>\n<h3 id=\"部署到github-pages上\"><a href=\"#部署到github-pages上\" class=\"headerlink\" title=\"部署到github pages上\"></a>部署到github pages上</h3><h4 id=\"1-部署个人网站\"><a href=\"#1-部署个人网站\" class=\"headerlink\" title=\"1.部署个人网站\"></a>1.部署个人网站</h4><p>首先需要确认github上已有<username>.github.io的仓库，用于存放个人主页的代码。这里对创建过程进行一个简单的介绍：<br>把个人主页网站的所有代码copy到一个本地的新文件夹下，然后再在github上新建一个仓库（命名为<username>.github.io,比如我的username是kkzyu），接着在本地文件夹中执行如下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git remote add origin git@github.com:kkzyu/kkzyu.github.io.git</span><br><span class=\"line\">$ git branch -M main</span><br><span class=\"line\">$ git push -u origin main</span><br></pre></td></tr></table></figure>\n\n<p>push成功后，进入setting-&gt;pages-&gt;branch，选择main和root，点击save。等待十分钟之后即可在<a href=\"https://kkzyu.github.io/%E6%9F%A5%E7%9C%8B%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5%E3%80%82\">https://kkzyu.github.io/查看自己的个人主页。</a></p>\n<h4 id=\"2-部署博客\"><a href=\"#2-部署博客\" class=\"headerlink\" title=\"2.部署博客\"></a>2.部署博客</h4><p>首先需要编辑myblog&#x2F;_config.yml文件，修改&#x2F;增加如下代码：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 部署配置</span></span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">https://github.com/kkzyu/blog.git</span> </span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">gh-pages</span>  <span class=\"comment\"># 必须使用 gh-pages 分支</span></span><br><span class=\"line\">  <span class=\"attr\">message:</span> <span class=\"string\">&quot;更新博客：<span class=\"template-variable\">&#123;&#123; now(&#x27;YYYY-MM-DD HH:mm:ss&#x27;) &#125;&#125;</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># URL 设置</span></span><br><span class=\"line\"><span class=\"attr\">url:</span> <span class=\"string\">https://kkzyu.github.io/blog</span></span><br><span class=\"line\"><span class=\"attr\">root:</span> <span class=\"string\">/blog/</span></span><br></pre></td></tr></table></figure>\n\n<p>由于hexo博客和个人主页独立部署更优（少冲突），因此在github上新建一个仓库（可以命名为myblog），注意无需初始化readme或其他文件。创建完成后，同样需要将本地的仓库推送上去：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git remote add origin git@github.com:kkzyu/myblog.git</span><br><span class=\"line\">$ git branch -M main</span><br><span class=\"line\">$ git push -u origin main</span><br><span class=\"line\">```  </span><br><span class=\"line\"></span><br><span class=\"line\">接着在本地myblog文件夹下安装部署插件并部署：</span><br><span class=\"line\"></span><br><span class=\"line\">``` bash</span><br><span class=\"line\">$ npm install hexo-deployer-git --save</span><br><span class=\"line\">$ hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>接着进入myblog仓库的settings-&gt;pages，选择branch为gh-pages，选择root目录。之后等待几分钟，进入到<a href=\"https://kkzyu.github.io/blog/%EF%BC%8C%E5%8D%B3%E5%8F%AF%E7%9C%8B%E5%88%B0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E3%80%82\">https://kkzyu.github.io/blog/，即可看到自己的博客。</a></p>\n<h3 id=\"将博客集成到vue个人主页中\"><a href=\"#将博客集成到vue个人主页中\" class=\"headerlink\" title=\"将博客集成到vue个人主页中\"></a>将博客集成到vue个人主页中</h3><p>在vue项目中，修改路由配置(router&#x2F;index.js)：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> routes = [&#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/blog&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Blog&#x27;</span>,</span><br><span class=\"line\">    <span class=\"title function_\">beforeEnter</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">window</span>.<span class=\"title function_\">open</span>(<span class=\"string\">&#x27;https://kkzyu.github.io/blog/&#x27;</span>, <span class=\"string\">&#x27;_blank&#x27;</span>)</span><br><span class=\"line\">      <span class=\"comment\">// 或者不新开标签页：</span></span><br><span class=\"line\">      <span class=\"comment\">// window.location.href = &#x27;https://kkzyu.github.io/blog/&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;]</span><br></pre></td></tr></table></figure>\n\n<p>在APP.vue中添加博客链接：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;router-link to=&quot;/blog&quot;&gt;Blog&lt;/router-link&gt;</span><br></pre></td></tr></table></figure>\n\n<p>等待几分钟之后，即可在vue项目中看到博客链接，点击后会在新标签页打开博客。</p>\n<h2 id=\"后期更新和测试\"><a href=\"#后期更新和测试\" class=\"headerlink\" title=\"后期更新和测试\"></a>后期更新和测试</h2><h3 id=\"更新博客\"><a href=\"#更新博客\" class=\"headerlink\" title=\"更新博客\"></a>更新博客</h3><p>在本地对myblog进行了修改后，网页并不会自动更新，需要进行一下操作才可在网页中观察到更新后内容：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean </span><br><span class=\"line\">hexo generate</span><br><span class=\"line\">hexo deploy</span><br><span class=\"line\"><span class=\"comment\">#可选：将源码变更推送到main分支备份</span></span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;更新博客内容&quot;</span></span><br><span class=\"line\">git push origin main</span><br></pre></td></tr></table></figure>\n\n<p>如果想要现在本地进行测试可以执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>待测试成功后，再进行更新。</p>\n","length":2263,"excerpt":"","more":"<p>2025年4月28日，第一次尝试把hexo集成到个人主页中，记录一下部署过程，以及后期的更新和测试步骤。</p>\n<h2 id=\"部署过程\"><a href=\"#部署过程\" class=\"headerlink\" title=\"部署过程\"></a>部署过程</h2><h3 id=\"创建hexo项目\"><a href=\"#创建hexo项目\" class=\"headerlink\" title=\"创建hexo项目\"></a>创建hexo项目</h3><p>hexo是github上一个开源的博客模板，首先可以在新目录下创建一个hexo项目，然后进入该目录，执行如下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n\n<p>接着进行一个初始化，进行初始化之后会创建一个新的hexo项目，自动克隆hexo-start和landscape主题：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo init myblog</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> myblog</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n<p>初始化之后，项目文件夹如下所示：<br>.<br>├── _config.yml（网站配置文件，以下的修改调整主要在这个文件下进行）<br>├── package.json<br>├── scaffolds<br>├── source<br>|   ├── _drafts<br>|   └── _posts<br>└── themes</p>\n<h3 id=\"本地测试\"><a href=\"#本地测试\" class=\"headerlink\" title=\"本地测试\"></a>本地测试</h3><p>默认地址是<a href=\"http://localhost:4000/\">http://localhost:4000/</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"选择主题\"><a href=\"#选择主题\" class=\"headerlink\" title=\"选择主题\"></a>选择主题</h3><p>hexo默认的主题比较简约，但它提供了非常多的模板，在<a href=\"https://hexo.io/themes/%E4%B8%8A%E5%8F%AF%E4%BB%A5%E6%8C%91%E9%80%89%E4%B8%BB%E9%A2%98%EF%BC%8C%E6%88%91%E8%BF%99%E9%87%8C%E7%94%A8%E7%9A%84%E6%98%AFvivia%EF%BC%88https://github.com/saicaca/hexo-theme-vivia%EF%BC%89%E3%80%82%E6%8E%A5%E7%9D%80%E6%8C%89README%E6%AD%A5%E9%AA%A4%E5%AE%89%E8%A3%85%E6%89%A7%E8%A1%8C%E5%8D%B3%E5%8F%AF%E3%80%82\">https://hexo.io/themes/上可以挑选主题，我这里用的是vivia（https://github.com/saicaca/hexo-theme-vivia）。接着按README步骤安装执行即可。</a></p>\n<h3 id=\"部署到github-pages上\"><a href=\"#部署到github-pages上\" class=\"headerlink\" title=\"部署到github pages上\"></a>部署到github pages上</h3><h4 id=\"1-部署个人网站\"><a href=\"#1-部署个人网站\" class=\"headerlink\" title=\"1.部署个人网站\"></a>1.部署个人网站</h4><p>首先需要确认github上已有<username>.github.io的仓库，用于存放个人主页的代码。这里对创建过程进行一个简单的介绍：<br>把个人主页网站的所有代码copy到一个本地的新文件夹下，然后再在github上新建一个仓库（命名为<username>.github.io,比如我的username是kkzyu），接着在本地文件夹中执行如下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git remote add origin git@github.com:kkzyu/kkzyu.github.io.git</span><br><span class=\"line\">$ git branch -M main</span><br><span class=\"line\">$ git push -u origin main</span><br></pre></td></tr></table></figure>\n\n<p>push成功后，进入setting-&gt;pages-&gt;branch，选择main和root，点击save。等待十分钟之后即可在<a href=\"https://kkzyu.github.io/%E6%9F%A5%E7%9C%8B%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5%E3%80%82\">https://kkzyu.github.io/查看自己的个人主页。</a></p>\n<h4 id=\"2-部署博客\"><a href=\"#2-部署博客\" class=\"headerlink\" title=\"2.部署博客\"></a>2.部署博客</h4><p>首先需要编辑myblog&#x2F;_config.yml文件，修改&#x2F;增加如下代码：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 部署配置</span></span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">https://github.com/kkzyu/blog.git</span> </span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">gh-pages</span>  <span class=\"comment\"># 必须使用 gh-pages 分支</span></span><br><span class=\"line\">  <span class=\"attr\">message:</span> <span class=\"string\">&quot;更新博客：<span class=\"template-variable\">&#123;&#123; now(&#x27;YYYY-MM-DD HH:mm:ss&#x27;) &#125;&#125;</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># URL 设置</span></span><br><span class=\"line\"><span class=\"attr\">url:</span> <span class=\"string\">https://kkzyu.github.io/blog</span></span><br><span class=\"line\"><span class=\"attr\">root:</span> <span class=\"string\">/blog/</span></span><br></pre></td></tr></table></figure>\n\n<p>由于hexo博客和个人主页独立部署更优（少冲突），因此在github上新建一个仓库（可以命名为myblog），注意无需初始化readme或其他文件。创建完成后，同样需要将本地的仓库推送上去：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git remote add origin git@github.com:kkzyu/myblog.git</span><br><span class=\"line\">$ git branch -M main</span><br><span class=\"line\">$ git push -u origin main</span><br><span class=\"line\">```  </span><br><span class=\"line\"></span><br><span class=\"line\">接着在本地myblog文件夹下安装部署插件并部署：</span><br><span class=\"line\"></span><br><span class=\"line\">``` bash</span><br><span class=\"line\">$ npm install hexo-deployer-git --save</span><br><span class=\"line\">$ hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>接着进入myblog仓库的settings-&gt;pages，选择branch为gh-pages，选择root目录。之后等待几分钟，进入到<a href=\"https://kkzyu.github.io/blog/%EF%BC%8C%E5%8D%B3%E5%8F%AF%E7%9C%8B%E5%88%B0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E3%80%82\">https://kkzyu.github.io/blog/，即可看到自己的博客。</a></p>\n<h3 id=\"将博客集成到vue个人主页中\"><a href=\"#将博客集成到vue个人主页中\" class=\"headerlink\" title=\"将博客集成到vue个人主页中\"></a>将博客集成到vue个人主页中</h3><p>在vue项目中，修改路由配置(router&#x2F;index.js)：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> routes = [&#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/blog&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Blog&#x27;</span>,</span><br><span class=\"line\">    <span class=\"title function_\">beforeEnter</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">window</span>.<span class=\"title function_\">open</span>(<span class=\"string\">&#x27;https://kkzyu.github.io/blog/&#x27;</span>, <span class=\"string\">&#x27;_blank&#x27;</span>)</span><br><span class=\"line\">      <span class=\"comment\">// 或者不新开标签页：</span></span><br><span class=\"line\">      <span class=\"comment\">// window.location.href = &#x27;https://kkzyu.github.io/blog/&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;]</span><br></pre></td></tr></table></figure>\n\n<p>在APP.vue中添加博客链接：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;router-link to=&quot;/blog&quot;&gt;Blog&lt;/router-link&gt;</span><br></pre></td></tr></table></figure>\n\n<p>等待几分钟之后，即可在vue项目中看到博客链接，点击后会在新标签页打开博客。</p>\n<h2 id=\"后期更新和测试\"><a href=\"#后期更新和测试\" class=\"headerlink\" title=\"后期更新和测试\"></a>后期更新和测试</h2><h3 id=\"更新博客\"><a href=\"#更新博客\" class=\"headerlink\" title=\"更新博客\"></a>更新博客</h3><p>在本地对myblog进行了修改后，网页并不会自动更新，需要进行一下操作才可在网页中观察到更新后内容：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean </span><br><span class=\"line\">hexo generate</span><br><span class=\"line\">hexo deploy</span><br><span class=\"line\"><span class=\"comment\">#可选：将源码变更推送到main分支备份</span></span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;更新博客内容&quot;</span></span><br><span class=\"line\">git push origin main</span><br></pre></td></tr></table></figure>\n\n<p>如果想要现在本地进行测试可以执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>待测试成功后，再进行更新。</p>\n"},{"title":"仓库迁移","date":"2025-04-29T03:00:26.000Z","_content":"## 仓库迁移与合并\n1. 先删除现有远程仓库\n```bash\ngit remote remove github\n```\n2. 添加新仓库为远程仓库\n```bash\ngit remote add github git@github.com:kkzyu/kkzyu.github.io.git\n```\n3. 验证远程仓库\n```bash\ngit remote -v\n```\n4. 获取仓库2代码\n```bash\ngit fetch github\n```\n5. 合并代码（保留双方历史）\n```bash\ngit merge github/main --allow-unrelated-histories\n```\n6. 解决冲突（重点关注以下文件）\n- 用编辑器处理冲突的.gitignore、package.json等\n- 保留Gitee仓库的.gitignore规则\n\n7. 提交变更\n```bash\ngit add .\ngit commit -m \"迁移完成：包含仓库2源码及网址文件\"\ngit push origin main\n```\n8. 验证代码完整性\n```bash\nnpm install && npm run dev # 确保能正常启动开发服务器\n```","source":"_posts/仓库迁移.md","raw":"---\ntitle: 仓库迁移\ndate: 2025-04-29 11:00:26\ntags: git\n---\n## 仓库迁移与合并\n1. 先删除现有远程仓库\n```bash\ngit remote remove github\n```\n2. 添加新仓库为远程仓库\n```bash\ngit remote add github git@github.com:kkzyu/kkzyu.github.io.git\n```\n3. 验证远程仓库\n```bash\ngit remote -v\n```\n4. 获取仓库2代码\n```bash\ngit fetch github\n```\n5. 合并代码（保留双方历史）\n```bash\ngit merge github/main --allow-unrelated-histories\n```\n6. 解决冲突（重点关注以下文件）\n- 用编辑器处理冲突的.gitignore、package.json等\n- 保留Gitee仓库的.gitignore规则\n\n7. 提交变更\n```bash\ngit add .\ngit commit -m \"迁移完成：包含仓库2源码及网址文件\"\ngit push origin main\n```\n8. 验证代码完整性\n```bash\nnpm install && npm run dev # 确保能正常启动开发服务器\n```","slug":"仓库迁移","published":1,"updated":"2025-04-29T03:43:36.225Z","comments":1,"layout":"post","photos":[],"_id":"cma217e4k0002gorgay8p4hrp","content":"<h2 id=\"仓库迁移与合并\"><a href=\"#仓库迁移与合并\" class=\"headerlink\" title=\"仓库迁移与合并\"></a>仓库迁移与合并</h2><ol>\n<li>先删除现有远程仓库<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote remove github</span><br></pre></td></tr></table></figure></li>\n<li>添加新仓库为远程仓库<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add github git@github.com:kkzyu/kkzyu.github.io.git</span><br></pre></td></tr></table></figure></li>\n<li>验证远程仓库<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote -v</span><br></pre></td></tr></table></figure></li>\n<li>获取仓库2代码<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git fetch github</span><br></pre></td></tr></table></figure></li>\n<li>合并代码（保留双方历史）<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git merge github/main --allow-unrelated-histories</span><br></pre></td></tr></table></figure></li>\n<li>解决冲突（重点关注以下文件）</li>\n</ol>\n<ul>\n<li>用编辑器处理冲突的.gitignore、package.json等</li>\n<li>保留Gitee仓库的.gitignore规则</li>\n</ul>\n<ol start=\"7\">\n<li>提交变更<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;迁移完成：包含仓库2源码及网址文件&quot;</span></span><br><span class=\"line\">git push origin main</span><br></pre></td></tr></table></figure></li>\n<li>验证代码完整性<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install &amp;&amp; npm run dev <span class=\"comment\"># 确保能正常启动开发服务器</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n","length":396,"excerpt":"","more":"<h2 id=\"仓库迁移与合并\"><a href=\"#仓库迁移与合并\" class=\"headerlink\" title=\"仓库迁移与合并\"></a>仓库迁移与合并</h2><ol>\n<li>先删除现有远程仓库<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote remove github</span><br></pre></td></tr></table></figure></li>\n<li>添加新仓库为远程仓库<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add github git@github.com:kkzyu/kkzyu.github.io.git</span><br></pre></td></tr></table></figure></li>\n<li>验证远程仓库<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote -v</span><br></pre></td></tr></table></figure></li>\n<li>获取仓库2代码<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git fetch github</span><br></pre></td></tr></table></figure></li>\n<li>合并代码（保留双方历史）<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git merge github/main --allow-unrelated-histories</span><br></pre></td></tr></table></figure></li>\n<li>解决冲突（重点关注以下文件）</li>\n</ol>\n<ul>\n<li>用编辑器处理冲突的.gitignore、package.json等</li>\n<li>保留Gitee仓库的.gitignore规则</li>\n</ul>\n<ol start=\"7\">\n<li>提交变更<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;迁移完成：包含仓库2源码及网址文件&quot;</span></span><br><span class=\"line\">git push origin main</span><br></pre></td></tr></table></figure></li>\n<li>验证代码完整性<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install &amp;&amp; npm run dev <span class=\"comment\"># 确保能正常启动开发服务器</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n"},{"title":"pinia重构","date":"2025-04-28T14:05:46.000Z","_content":"### Pinia 重构过程记录\n#### 重构步骤\n\n1. 安装必要依赖\n```bash\nnpm install pinia\n```\n\n2. 创建 Pinia Store\n```js\n// stores/cvStore.js\nimport { defineStore } from 'pinia'\nimport { message } from 'ant-design-vue'\nimport cvDataStructure from '@/assets/data/cv-info.json'\nimport html2canvas from 'html2canvas'\nimport jsPDF from 'jspdf'\n\nexport const useCvStore = defineStore('cv', {\n  state: () => ({\n    currentLang: 'cn',\n    activeSections: [],\n    commentContent: '',\n    isDownloadingPdf: false,\n    defaultAvatar: '/images/kkz.jpg',\n    manualToggleStates: {}\n  }),\n  \n  actions: {\n    // 业务逻辑方法...\n  },\n  \n  getters: {\n    // 计算属性...\n  }\n})\n```\n\n3. 修改组件结构\n```vue\n<script setup>\nimport { storeToRefs } from 'pinia'\nimport { useCvStore } from '@/stores/cvStore'\n\nconst store = useCvStore()\nconst { \n  currentLang,\n  activeSections,\n  isDownloadingPdf,\n  cvData\n} = storeToRefs(store)\n\n// 方法代理\nconst handleLangChange = ({ key }) => store.handleLangChange(key)\nconst downloadPDF = () => store.downloadPDF(cvContainerRef.value)\n</script>\n```\n","source":"_posts/pinia重构.md","raw":"---\ntitle: pinia重构\ndate: 2025-04-28 22:05:46\ntags: web前端\n---\n### Pinia 重构过程记录\n#### 重构步骤\n\n1. 安装必要依赖\n```bash\nnpm install pinia\n```\n\n2. 创建 Pinia Store\n```js\n// stores/cvStore.js\nimport { defineStore } from 'pinia'\nimport { message } from 'ant-design-vue'\nimport cvDataStructure from '@/assets/data/cv-info.json'\nimport html2canvas from 'html2canvas'\nimport jsPDF from 'jspdf'\n\nexport const useCvStore = defineStore('cv', {\n  state: () => ({\n    currentLang: 'cn',\n    activeSections: [],\n    commentContent: '',\n    isDownloadingPdf: false,\n    defaultAvatar: '/images/kkz.jpg',\n    manualToggleStates: {}\n  }),\n  \n  actions: {\n    // 业务逻辑方法...\n  },\n  \n  getters: {\n    // 计算属性...\n  }\n})\n```\n\n3. 修改组件结构\n```vue\n<script setup>\nimport { storeToRefs } from 'pinia'\nimport { useCvStore } from '@/stores/cvStore'\n\nconst store = useCvStore()\nconst { \n  currentLang,\n  activeSections,\n  isDownloadingPdf,\n  cvData\n} = storeToRefs(store)\n\n// 方法代理\nconst handleLangChange = ({ key }) => store.handleLangChange(key)\nconst downloadPDF = () => store.downloadPDF(cvContainerRef.value)\n</script>\n```\n","slug":"pinia重构","published":1,"updated":"2025-04-29T04:52:16.146Z","comments":1,"layout":"post","photos":[],"_id":"cma217e4m0004gorgf9nsg417","content":"<h3 id=\"Pinia-重构过程记录\"><a href=\"#Pinia-重构过程记录\" class=\"headerlink\" title=\"Pinia 重构过程记录\"></a>Pinia 重构过程记录</h3><h4 id=\"重构步骤\"><a href=\"#重构步骤\" class=\"headerlink\" title=\"重构步骤\"></a>重构步骤</h4><ol>\n<li><p>安装必要依赖</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install pinia</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建 Pinia Store</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// stores/cvStore.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; defineStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;pinia&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; message &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;ant-design-vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> cvDataStructure <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/assets/data/cv-info.json&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> html2canvas <span class=\"keyword\">from</span> <span class=\"string\">&#x27;html2canvas&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> jsPDF <span class=\"keyword\">from</span> <span class=\"string\">&#x27;jspdf&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> useCvStore = <span class=\"title function_\">defineStore</span>(<span class=\"string\">&#x27;cv&#x27;</span>, &#123;</span><br><span class=\"line\">  <span class=\"attr\">state</span>: <span class=\"function\">() =&gt;</span> (&#123;</span><br><span class=\"line\">    <span class=\"attr\">currentLang</span>: <span class=\"string\">&#x27;cn&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">activeSections</span>: [],</span><br><span class=\"line\">    <span class=\"attr\">commentContent</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">isDownloadingPdf</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">defaultAvatar</span>: <span class=\"string\">&#x27;/images/kkz.jpg&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">manualToggleStates</span>: &#123;&#125;</span><br><span class=\"line\">  &#125;),</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"attr\">actions</span>: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 业务逻辑方法...</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"attr\">getters</span>: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 计算属性...</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改组件结构</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script setup&gt;</span><br><span class=\"line\">import &#123; storeToRefs &#125; from &#x27;pinia&#x27;</span><br><span class=\"line\">import &#123; useCvStore &#125; from &#x27;@/stores/cvStore&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">const store = useCvStore()</span><br><span class=\"line\">const &#123; </span><br><span class=\"line\">  currentLang,</span><br><span class=\"line\">  activeSections,</span><br><span class=\"line\">  isDownloadingPdf,</span><br><span class=\"line\">  cvData</span><br><span class=\"line\">&#125; = storeToRefs(store)</span><br><span class=\"line\"></span><br><span class=\"line\">// 方法代理</span><br><span class=\"line\">const handleLangChange = (&#123; key &#125;) =&gt; store.handleLangChange(key)</span><br><span class=\"line\">const downloadPDF = () =&gt; store.downloadPDF(cvContainerRef.value)</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li>\n</ol>\n","length":1095,"excerpt":"","more":"<h3 id=\"Pinia-重构过程记录\"><a href=\"#Pinia-重构过程记录\" class=\"headerlink\" title=\"Pinia 重构过程记录\"></a>Pinia 重构过程记录</h3><h4 id=\"重构步骤\"><a href=\"#重构步骤\" class=\"headerlink\" title=\"重构步骤\"></a>重构步骤</h4><ol>\n<li><p>安装必要依赖</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install pinia</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建 Pinia Store</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// stores/cvStore.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; defineStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;pinia&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; message &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;ant-design-vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> cvDataStructure <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/assets/data/cv-info.json&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> html2canvas <span class=\"keyword\">from</span> <span class=\"string\">&#x27;html2canvas&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> jsPDF <span class=\"keyword\">from</span> <span class=\"string\">&#x27;jspdf&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> useCvStore = <span class=\"title function_\">defineStore</span>(<span class=\"string\">&#x27;cv&#x27;</span>, &#123;</span><br><span class=\"line\">  <span class=\"attr\">state</span>: <span class=\"function\">() =&gt;</span> (&#123;</span><br><span class=\"line\">    <span class=\"attr\">currentLang</span>: <span class=\"string\">&#x27;cn&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">activeSections</span>: [],</span><br><span class=\"line\">    <span class=\"attr\">commentContent</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">isDownloadingPdf</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">defaultAvatar</span>: <span class=\"string\">&#x27;/images/kkz.jpg&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">manualToggleStates</span>: &#123;&#125;</span><br><span class=\"line\">  &#125;),</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"attr\">actions</span>: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 业务逻辑方法...</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"attr\">getters</span>: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 计算属性...</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改组件结构</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script setup&gt;</span><br><span class=\"line\">import &#123; storeToRefs &#125; from &#x27;pinia&#x27;</span><br><span class=\"line\">import &#123; useCvStore &#125; from &#x27;@/stores/cvStore&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">const store = useCvStore()</span><br><span class=\"line\">const &#123; </span><br><span class=\"line\">  currentLang,</span><br><span class=\"line\">  activeSections,</span><br><span class=\"line\">  isDownloadingPdf,</span><br><span class=\"line\">  cvData</span><br><span class=\"line\">&#125; = storeToRefs(store)</span><br><span class=\"line\"></span><br><span class=\"line\">// 方法代理</span><br><span class=\"line\">const handleLangChange = (&#123; key &#125;) =&gt; store.handleLangChange(key)</span><br><span class=\"line\">const downloadPDF = () =&gt; store.downloadPDF(cvContainerRef.value)</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li>\n</ol>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cma217e4e0000gorg26f71azs","tag_id":"cma217e4l0003gorg9eio5msn","_id":"cma217e4o0006gorg13tq4m34"},{"post_id":"cma217e4k0002gorgay8p4hrp","tag_id":"cma217e4n0005gorgasjv5bpu","_id":"cma217e4p0008gorgeq2i7cje"},{"post_id":"cma217e4m0004gorgf9nsg417","tag_id":"cma217e4l0003gorg9eio5msn","_id":"cma217e4q0009gorgb34j868v"}],"Tag":[{"name":"web前端","_id":"cma217e4l0003gorg9eio5msn"},{"name":"git","_id":"cma217e4n0005gorgasjv5bpu"}]}}